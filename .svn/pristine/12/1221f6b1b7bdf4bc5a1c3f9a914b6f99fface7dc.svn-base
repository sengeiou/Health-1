//
//  BindPhoneViewController.swift
//  Health
//
//  Created by Yalin on 15/10/10.
//  Copyright © 2015年 Yalin. All rights reserved.
//

import UIKit

protocol BindPhoneViewControllerDelegate {
    func bindFinished(_ phone: String?, error: NSError?)
}


class BindPhoneViewController: UIViewController {

    var delegate: BindPhoneViewControllerDelegate?
    
    @IBOutlet weak var phoneTextField: UITextField!
    
    @IBOutlet weak var codeTextField: UITextField!
    
    @IBOutlet weak var sendCodeButton: UIButton!
    var reQueryCaptchas: Timer?
    var requeryCaptchasTimerCount: Int8 = 0
    
    class func showBindPhoneViewController(_ delegate: BindPhoneViewControllerDelegate?, rootController: UIViewController) {
        
        let controller = BindPhoneViewController()
        controller.delegate = delegate
        if #available(iOS 8.0, *) {
            controller.modalPresentationStyle = UIModalPresentationStyle.overCurrentContext
        } else {
            // Fallback on earlier versions
            controller.modalPresentationStyle = UIModalPresentationStyle.currentContext
        }
        // UIModalPresentationFormSheet
        rootController.present(controller, animated: true) { () -> Void in
            controller.view.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.5)
        }
    }
    
    class func cancelBind(_ complete: @escaping (NSError?) -> Void) {
        LoginManager.completeInfomation(UserData.sharedInstance.name!, gender: UserData.sharedInstance.gender!, age: UserData.sharedInstance.age!, height: UserData.sharedInstance.height!, phone: nil, organizationCode: UserData.sharedInstance.organizationCode, headURL: UserData.sharedInstance.headURL, complete: complete)
    }
    
    convenience init() {
        self.init(nibName: "BindPhoneViewController", bundle: nil)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
    @IBAction func closeButtonPressed(_ sender: AnyObject) {
        self.dismiss(animated: true, completion: nil)
    }
    
    //MARK:发送验证码
    @IBAction func sendCodeButtonPressed(_ sender: AnyObject) {
        
        sendCodeButton.isEnabled = false
        requeryCaptchasTimerCount = 0
        reQueryCaptchas = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(BindPhoneViewController.requeryCaptchasTimer), userInfo: nil, repeats: true)
        
        LoginManager.queryCaptchas(self.phoneTextField.text) {[unowned self] (authCode:String?, error: NSError?) -> Void in
            if error != nil {
                UIAlertView(title: error?.domain, message: error?.localizedDescription, delegate: nil, cancelButtonTitle: "确定").show()
                self.sendCodeButton.isEnabled = true
                self.reQueryCaptchas?.invalidate()
                self.sendCodeButton.setTitle("发送验证码", for: UIControlState())
            }
            
        }
    }
    

    @IBAction func sureButtonPressed(_ sender: AnyObject) {
        
        /*
         AppDelegate.applicationDelegate().updateHUD(HUDType.hotwheels, message: "正在登录", detailMsg: nil, progress: nil)
         
         LoginManager.login(self.usernameTextField.text!, captchas: self.passwordTextField.text!) {[unowned self] (error: NSError?) -> Void in
         self.dealLoginFinished(nil, headURL: nil, error: error)
         AppDelegate.applicationDelegate().hiddenHUD()
         }
         backgroundPressed(sender)
         */
        
        LoginManager.login(self.phoneTextField.text!, captchas: self.codeTextField.text!) {[unowned self] (error: NSError?) -> Void in
            if (error != nil)
            {
//                UIAlertView(title: error?.domain, message: error?.localizedDescription, delegate: nil, cancelButtonTitle: "确定").show()
                Alert.showError(error!)
            }
            else
            {
                LoginManager.completeInfomation(UserData.sharedInstance.name!, gender: UserData.sharedInstance.gender!, age: UserData.sharedInstance.age!, height: UserData.sharedInstance.height!, phone: self.phoneTextField.text == nil || self.phoneTextField.text! == "" ? nil : self.phoneTextField.text, organizationCode: UserData.sharedInstance.organizationCode, headURL: UserData.sharedInstance.headURL) { [unowned self] (error: NSError?) -> Void in
                    self.delegate?.bindFinished(self.phoneTextField.text == nil || self.phoneTextField.text == "" ? nil : self.phoneTextField.text, error: error)
                    
                    if error == nil {
                        self.dismiss(animated: true, completion: nil)
                    }
                    else {
                        Alert.showError(error!)
                    }
                }
            }
            
        }

        
        
    }
    
    // MARK: - Requery Captchas Timer
    func requeryCaptchasTimer() {
        
        let maxRequeryCount: Int8 = 60
        requeryCaptchasTimerCount += 1
        sendCodeButton.setTitle("\(maxRequeryCount - requeryCaptchasTimerCount)秒", for: UIControlState())
        
        if requeryCaptchasTimerCount >= maxRequeryCount {
            sendCodeButton.isEnabled = true
            reQueryCaptchas?.invalidate()
            sendCodeButton.setTitle("发送验证码", for: UIControlState())
        }
    }
}
